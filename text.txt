 1740  source venv/bin/activate && python -c "import deepface; print('DeepFace import 성공')"
 1741  source venv/bin/activate && python flask_app_with_login.py 2>&1 | head -20
 1742  source venv/bin/activate && pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
 1743  source venv/bin/activate && pip install ultralytics
 1744  sleep 5 && ps aux | grep flask
 1745  ps aux | grep python
 1746  source venv/bin/activate && python flask_app_with_login.py 2>&1
 1747  source venv/bin/activate && pip install deep-sort-realtime
 1748  sleep 5 && ps aux | grep python
 1749  source venv/bin/activate && python flask_app_with_login.py 2>&1 | head -20
 1750  source venv/bin/activate && pip install mysql-connector-python
 1751  python3 flask_app_with_face_recognition.py
 1752  python3 flask_app_optimized.py
 1753  /bin/python3 /home/hwaseop/final/flask_app_with_login.py
 1754  /bin/python3 /home/hwaseop/final/test_face_recognition.py
 1755  /bin/python3 /home/hwaseop/final/flask_app_optimized.py
 1756  /bin/python3 /home/hwaseop/final/flask_app_with_face_recognition.py
 1757  /bin/python3 /home/hwaseop/final/test_face_recognition.py
 1758  source venv/bin/activate
 1759  /bin/python3 /home/hwaseop/final/test_face_recognition.py
 1760  python3 flask_app_optimized.py
 1761  /bin/python3 /home/hwaseop/final/flask_app_optimized.py
 1762  /bin/python3 /home/hwaseop/final/face_recognition_functions.py
 1763  /bin/python3 /home/hwaseop/final/test_face_recognition.py
 1764  /bin/python3 /home/hwaseop/final/flask_app.py
 1765  /bin/python3 /home/hwaseop/final/test_face_recognition.py
 1766  /bin/python3 /home/hwaseop/final/flask_app_optimized.py
 1767  /bin/python3 /home/hwaseop/final/face_recognition_functions.py
 1768  /bin/python3 /home/hwaseop/final/flask_app_optimized.py
 1769  cd /home/hwaseop/final && pip install deepface==0.0.79
 1770  which python3 && python3 -c "import sys; print(sys.path)"
 1771  python3 -c "import deepface; print('DeepFace import 성공')"
 1772  ps aux | grep python | grep -v grep
 1773  cd /home/hwaseop/final && sleep 3 && ps aux | grep flask_app_with_face_recognition
 1774  curl -s http://localhost:5000 | head -20
 1775  wget -qO- http://localhost:5000 | head -10
 1776  python3 test_face_recognition.py
 1777  python3 -c "import sys; print('Python path:'); [print(p) for p in sys.path]"
 1778  python3 -c "import deepface; print('DeepFace version:', deepface.__version__)"
 1779  python3 -c "import deepface; print('DeepFace import 성공'); print(dir(deepface)[:10])"
 1780  python3 -c "from deepface import DeepFace; print('DeepFace class import 성공')"
 1781  python3 -c "import tensorflow as tf; print('TensorFlow version:', tf.__version__)"
 1782  python3 -c "import keras; print('Keras version:', keras.__version__)"
 1783  pip install face-recognition
 1784  python3 -c "import face_recognition; print('face_recognition import 성공')"
 1785  python3 test_face_recognition.py
 1786  cd /home/hwaseop/final && sleep 3 && ps aux | grep flask_app_optimized
 1787  wget -qO- http://localhost:5000 | head -10
 1788  curl -s http://localhost:5000/api/stats | head -5
 1789  chmod +x run_face_login_app.sh
 1790  python3 -c "import face_recognition; print('✅ face_recognition 라이브러리 사용 가능')"
 1791  pkill -f flask_app_optimized.py
 1792  ps aux | grep flask_app_optimized
 1793  python flask_app_optimized.py
 1794  python3 flask_app_optimized.py
 1795  cd /home/hwaseop/final && python flask_app_optimized.py
 1796  python3 flask_app_optimized.py
 1797  python3 flask_app_optimized.py
 1798  /bin/python3 /home/hwaseop/final/flask_app_optimized.py
 1799  source venv/bin/activate
 1800  /bin/python3 /home/hwaseop/final/flask_app_optimized.py
 1801  /bin/python3 /home/hwaseop/final/flask_app_with_face_recognition.py
 1802  /bin/python3 /home/hwaseop/final/flask_app_with_login.py
 1803  /bin/python3 /home/hwaseop/final/flask_app_optimized.py
 1804  lt --port 5000
 1805  mysql -u root -p -D ai_safety_monitor
 1806  # Linux에서 IBus 재시작
 1807  ibus-daemon -drx
 1808  ibus-setup
 1809  ㅂㅈㄷㅂㅈㄷ
 1810  ibus-setup
 1811  /bin/python3 /home/hwaseop/final/centroidHelmetTracker.py
 1812  /bin/python3 /home/hwaseop/final/face_recognition_functions.py
 1813  /bin/python3 /home/hwaseop/final/flask_app_with_login.py
 1814  /bin/python3 /home/hwaseop/final/flask_app.py
 1815  /bin/python3 /home/hwaseop/final/flask/flask_app.py
 1816  /bin/python3 /home/hwaseop/final/flask_app.py
 1817  /bin/python3 /home/hwaseop/final/database_manager_patched.py
 1818  /bin/python3 /home/hwaseop/final/flask_app.py
 1819  git status
 1820  git add .
 1821  /bin/python3 /home/hwaseop/final/flask_app.py
 1822  ls /dev/vi*
 1823  source venv/bin/activate
 1824  /bin/python3 /home/hwaseop/final/flask_app.py
 1825  ls /dev/vi*
 1826  /bin/python3 /home/hwaseop/final/flask_app.py
 1827  ls /dev/vi*
 1828  /bin/python3 /home/hwaseop/final/flask_app.py
 1829  v4l2-ctl --list-devices
 1830  v4l2-ctl -d /dev/video0 --list-formats-ext
 1831  v4l2-ctl -d /dev/video1 --list-formats-ext
 1832  gst-device-monitor-1.0 Video/Source
 1833  gst-launch-1.0 -v pipewiresrc path=36 !     videoconvert ! autovideosink
 1834  /bin/python3 /home/hwaseop/final/flask_app.py
 1835  gst-device-monitor-1.0 Video/Source
 1836  /bin/python3 /home/hwaseop/final/flask_app.py
 1837  gst-launch-1.0 -v pipewiresrc path=36 ! decodebin !     videoconvert ! autovideosink
 1838  pw-cli info 36 | grep -A3 Formats
 1839  gst-device-monitor-1.0 --gst-debug-level=1 Video/Source | less
 1840  pw-cli info 36 | grep -A3 Formats
 1841  gst-device-monitor-1.0 --gst-debug-level=1 Video/Source | less
 1842  pw-cli info 36 | grep -A3 "Formats"
 1843  gst-launch-1.0 -vv pipewiresrc path=36 !                fakesink dump=1
 1844  sudo apt-get install v4l-utils
 1845  v4l2-ctl -d /dev/video1 --all
 1846  v4l2-ctl -d /dev/video1 --list-formats-ext
 1847  gst-launch-1.0 -v v4l2src device=/dev/video1 !     video/x-raw,format=YUY2,width=640,height=480,framerate=30/1 !     videoconvert ! autovideosink
 1848  gst-launch-1.0 -v v4l2src device=/dev/video1 !     image/jpeg,width=1280,height=720,framerate=30/1 !     jpegdec ! videoconvert ! autovideosink
 1849  gst-launch-1.0 -v v4l2src device=/dev/video1 !     video/x-raw,format=YUY2,width=640,height=480,framerate=30/1 !     videoconvert ! autovideosink
 1850  gst-launch-1.0 -v v4l2src device=/dev/video1 !     image/jpeg,width=1280,height=720,framerate=30/1 !     jpegdec ! videoconvert ! autovideosink
 1851  lsof /dev/video1
 1852  ls /dev/video*
 1853  v4l2-ctl --list-devices
 1854  udevadm info --name=/dev/video2 --query=all
 1855  /bin/python3 /home/hwaseop/final/flask_app.py
 1856  python3 -c "import cv2; print(cv2.getBuildInformation()) | grep GStreamer"
 1857  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep GStreamer
 1858  /bin/python3 /home/hwaseop/final/flask_app.py
 1859  sudo apt install -y build-essential cmake git pkg-config libgtk-3-dev     libavcodec-dev libavformat-dev libswscale-dev     libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev     python3-dev python3-numpy
 1860  cd ~/opencv
 1861  git clone https://github.com/opencv/opencv.git
 1862  git clone https://github.com/opencv/opencv_contrib.git
 1863  cd opencv
 1864  git checkout 4.5.5
 1865  cd ../opencv_contrib
 1866  git checkout 4.5.5
 1867  cd ~/opencv
 1868  cd ..
 1869  cd ~/opencv
 1870  cd/opencv
 1871  cd opencv
 1872  mkdir build && cd build
 1873  cmake -D CMAKE_BUILD_TYPE=Release       -D CMAKE_INSTALL_PREFIX=/usr/local       -D WITH_GSTREAMER=ON       -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules       -D BUILD_EXAMPLES=ON       -D ENABLE_PRECOMPILED_HEADERS=OFF ..
 1874  make -j$(nproc)
 1875  ls
 1876  make -j$(nproc)
 1877  ls -l Makefile
 1878  cat CMakeFiles/CMakeError.log | less
 1879  -D ENABLE_PRECOMPILED_HEADERS=OFF -D ENABLE_CXX11=ON -D OPENCV_ENABLE_NONFREE=ON -D ENABLE_BUILD_HARDENING=OFF q
 1880  rm -rf build
 1881  mkdir build && cd build
 1882  cmake -D CMAKE_BUILD_TYPE=Release       -D CMAKE_INSTALL_PREFIX=/usr/local       -D WITH_GSTREAMER=ON       -D OPENCV_EXTRA_MODULES_PATH=~/final/opencv_contrib/modules       -D BUILD_EXAMPLES=ON       -D ENABLE_PRECOMPILED_HEADERS=OFF       -D ENABLE_BUILD_HARDENING=OFF       ..
 1883  make -j$(nproc)
 1884  cd ~/final/opencv
 1885  rm -rf build
 1886  ls
 1887  mkdir build && cd build
 1888  cmake -D CMAKE_BUILD_TYPE=Release       -D CMAKE_INSTALL_PREFIX=/usr/local       -D WITH_GSTREAMER=ON       -D OPENCV_EXTRA_MODULES_PATH=~/final/opencv_contrib/modules       -D BUILD_EXAMPLES=ON       -D ENABLE_PRECOMPILED_HEADERS=OFF       -D ENABLE_BUILD_HARDENING=OFF       ..
 1889  make -j$(nproc)
 1890  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep GStreamer
 1891  sudo apt update
 1892  sudo apt install -y   libgstreamer1.0-dev   libgstreamer-plugins-base1.0-dev   gstreamer1.0-tools   gstreamer1.0-libav   libavcodec-dev libavformat-dev libswscale-dev
 1893  cd ..
 1894  rm -rf build
 1895  mkdir build && cd build
 1896  cmake -D CMAKE_BUILD_TYPE=Release       -D CMAKE_INSTALL_PREFIX=/usr/local       -D WITH_GSTREAMER=ON       -D OPENCV_EXTRA_MODULES_PATH=~/final/opencv_contrib/modules       -D BUILD_EXAMPLES=ON       -D ENABLE_PRECOMPILED_HEADERS=OFF       -D ENABLE_BUILD_HARDENING=OFF       ..
 1897  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep GStreamer
 1898  make -j$(nproc)
 1899  python3 -c "import cv2; print(cv2.__file__)"
 1900  cd opencv
 1901  pip uninstall opencv-python opencv-contrib-python -y
 1902  python3 -c "import cv2; print(cv2.__file__)"
 1903  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep GStreamer
 1904  sudo apt update
 1905  sudo apt install -y   libgstreamer1.0-dev   libgstreamer-plugins-base1.0-dev   gstreamer1.0-tools   gstreamer1.0-libav   libavcodec-dev libavformat-dev libswscale-dev   libglib2.0-dev
 1906  cd ~/final/opencv/build
 1907  grep -i gstreamer CMakeCache.txt
 1908  cd ~/final/opencv/build
 1909  cmake -D CMAKE_BUILD_TYPE=Release       -D CMAKE_INSTALL_PREFIX=/usr/local       -D OPENCV_GENERATE_PKGCONFIG=ON       -D WITH_GSTREAMER=ON       -D BUILD_opencv_python3=ON       -D PYTHON3_EXECUTABLE=$(which python3)       -D PYTHON3_INCLUDE_DIR=$(python3 -c "from sysconfig import get_paths as gp; print(gp()['include'])")       -D PYTHON3_LIBRARY=$(python3 -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")/libpython3.10.so       -D OPENCV_EXTRA_MODULES_PATH=~/final/opencv_contrib/modules       -D ENABLE_PRECOMPILED_HEADERS=OFF       ..
 1910  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep GStreamer
 1911  grep cap_gstreamer modules/videoio/CMakeLists.txt
 1912  cmake -D CMAKE_BUILD_TYPE=Release       -D CMAKE_INSTALL_PREFIX=/usr/local       -D WITH_GSTREAMER=ON       -D BUILD_opencv_python3=ON       -D OPENCV_GENERATE_PKGCONFIG=ON       -D OPENCV_EXTRA_MODULES_PATH=~/final/opencv_contrib/modules       -D PYTHON3_EXECUTABLE=$(which python3)       -D ENABLE_PRECOMPILED_HEADERS=OFF       ..
 1913  make -j$(nproc)
 1914  locale
 1915  echo $TERM
 1916  fc-list :lang=ko | head -5
 1917  im-config -l
 1918  ibus list-engine | grep -i korean
 1919  echo "한글 테스트: 안녕하세요"
 1920  chmod +x setup_korean_input.sh
 1921  ibus-daemon -drx
 1922  ibus engine
 1923  export GTK_IM_MODULE=ibus && export QT_IM_MODULE=ibus && export XMODIFIERS=@im=ibus
 1924  /bin/python3 /home/hwaseop/final/flask_app.py
 1925  cd /home/hwaseop/final && python3 flask_app.py
 1926  gst-launch-1.0 v4l2src device=/dev/video0 ! videoconvert ! autovideosink
 1927  python3 flask_app.py
 1928  ls -l /dev/video*
 1929  which gst-launch-1.0
 1930  d
 1931  source venv/bin/activate
 1932  /bin/python3 /home/hwaseop/final/flask_app.py
 1933  pw-dump | grep '"id": 36' -A 10
 1934  pw-cli ls Node
 1935  /bin/python3 /home/hwaseop/final/flask_app.py
 1936  source venv/bin/activate
 1937  /bin/python3 /home/hwaseop/final/flask_app.py
 1938  ls -l /dev/video*
 1939  gst-launch-1.0 v4l2src device=/dev/video0 ! videoconvert ! autovideosink
 1940  /bin/python3 /home/hwaseop/final/test.py
 1941  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep GStreamer
 1942  v4l2-ctl --list-devices
 1943  gst-launch-1.0 v4l2src device=/dev/video0 ! videoconvert ! autovideosink
 1944  source venv/bin/activate
 1945  v4l2-ctl --list-devices
 1946  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep GStreamer
 1947  /bin/python3 /home/hwaseop/.vscode/extensions/ms-python.python-2025.8.0-linux-x64/python_files/printEnvVariablesToFile.py /home/hwaseop/.vscode/extensions/ms-python.python-2025.8.0-linux-x64/python_files/deactivate/bash/envVars.txt
 1948  g++ -m main main.cpp
 1949  g++ -o main main.cpp
 1950  g++ -o main.cpp main
 1951  /bin/python3 /home/hwaseop/final/flask_app.py
 1952  source venv/bin/activate
 1953  ls -l /dev/video*
 1954  gst-launch-1.0 v4l2src device=/dev/video0 ! videoconvert ! autovideosink
 1955  source venv/bin/activate
 1956  sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
 1957  cmake -D CMAKE_BUILD_TYPE=Release       -D CMAKE_INSTALL_PREFIX=/usr/local       -D WITH_GSTREAMER=ON       -D OPENCV_EXTRA_MODULES_PATH=~/final/opencv_contrib/modules       -D BUILD_opencv_python3=ON       -D PYTHON3_EXECUTABLE=$(which python3)       -D ENABLE_PRECOMPILED_HEADERS=OFF       ..
 1958  cd ~/final/opencv/build
 1959  cmake -D CMAKE_BUILD_TYPE=Release       -D CMAKE_INSTALL_PREFIX=/usr/local       -D WITH_GSTREAMER=ON       -D OPENCV_EXTRA_MODULES_PATH=~/final/opencv_contrib/modules       -D BUILD_opencv_python3=ON       -D PYTHON3_EXECUTABLE=$(which python3)       -D ENABLE_PRECOMPILED_HEADERS=OFF       ..
 1960  make -j$(nproc)
 1961  sudo make install
 1962  'v4l2src device=/dev/video0 ! videoconvert ! '
 1963  gst-launch-1.0 v4l2src device=/dev/video0 ! videoconvert ! video/x-raw,width=640,height=480,framerate=30/1 ! appsink
 1964  gst-launch-1.0 v4l2src device=/dev/video0 ! videoconvert ! video/x-raw,width=640,height=480,framerate=30/1 ! appvideosink
 1965  gst-launch-1.0 v4l2src device=/dev/video0 ! videoconvert ! video/x-raw,width=640,height=480,framerate=30/1 ! autovideosink
 1966  /bin/python3 /home/hwaseop/final/flask_app.py
 1967  ls /dev/vi*
 1968  파이프라인이 PREROLL됨...
 1969  파이프라인을 재생중으로 변경중 ...
 1970  New clock: GstSystemClock
 1971  X connection to :0 broken (explicit kill or server shutdown).
 1972  gst-launch-1.0 v4l2src device=/dev/video0 ! videoconvert ! video/x-raw,width=640,height=480,framerate=30/1 ! autovideosink
 1973  /bin/python3 /home/hwaseop/final/flask_app.py
 1974  /bin/python3 /home/hwaseop/.vscode/extensions/ms-python.python-2025.8.0-linux-x64/python_files/printEnvVariablesToFile.py /home/hwaseop/.vscode/extensions/ms-python.python-2025.8.0-linux-x64/python_files/deactivate/bash/envVars.txt
 1975  cd ..
 1976  /bin/python3 /home/hwaseop/final/flask_app.py
 1977  python3
 1978  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep -i gstreamer
 1979  history
 1980  python3
 1981  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep -i gstreamer
 1982  sudo apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
 1983  sudo apt-get install gstreamer1.0-tools gstreamer1.0-plugins-{good,bad,ugly,base}
 1984  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep -i gstreamer
 1985  cd opencv
 1986  ls
 1987  rm -rf build/
 1988  mkdir build
 1989  cd build/
 1990  cmake -D CMAKE_BUILD_TYPE=Release       -D CMAKE_INSTALL_PREFIX=/usr/local       -D WITH_GSTREAMER=ON       -D OPENCV_EXTRA_MODULES_PATH=~/final/opencv_contrib/modules       -D BUILD_opencv_python3=ON       -D PYTHON3_EXECUTABLE=$(which python3)       -D ENABLE_PRECOMPILED_HEADERS=OFF       ..
 1991  make -j$(nproc)
 1992  /bin/python3 /home/hwaseop/final/flask_app.py
 1993  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep -i gstreamer
 1994  history
 1995  /bin/python3 /home/hwaseop/final/flask_app.py
 1996  history
 1997  /bin/python3 /home/hwaseop/final/flask_app.py
 1998  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep -i gstreamer
 1999  python3
 2000  pip uninstall opencv-python opencv-python-headless -y
 2001  sudo pip uninstall opencv-python opencv-python-headless -y
 2002  python3
 2003  pip list | grep opencv
 2004  pip list | grep cv2
 2005  python3
 2006  apt list | grep opencv
 2007  sudo apt remove python3-opencv
 2008  apt list | grep opencv
 2009  python3
 2010  python3 -c "import cv2; print(cv2.getBuildInformation())" | grep -i gstreamer
 2011  gst-launch-1.0 v4l2src device=/dev/video0 ! videoconvert ! video/x-raw,width=640,height=480,framerate=30/1 ! autovideosink
 2012  cd final/
 2013  ls
 2014  source venv/bin/activate
 2015  gst-launch-1.0 v4l2src device=/dev/video0 ! videoconvert ! video/x-raw,width=640,height=480,framerate=30/1 ! autovideosink
 2016  python3
 2017  ls
 2018  python3 flask_app.py 
 2019  pip install seaborn
 2020  python3 flask_app.py 
 2021  ls /devvi*
 2022  ls /dev/vi*
 2023  sudo nano flask_app.py 
 2024  python3 flask_app.py 
 2025  ls /dev/vi*
 2026  python3 flask_app.py 
 2027  ls /dev/vi*
 2028  python3 flask_app.py 
 2029  ls /dev/vi*
 2030  history
(venv) hwaseop@hwaseop-virtual-machine